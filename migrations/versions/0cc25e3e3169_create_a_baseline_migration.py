"""Create a baseline migration

Revision ID: 0cc25e3e3169
Revises: 
Create Date: 2023-11-08 16:23:08.320379

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0cc25e3e3169'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('votes')
    op.drop_table('options')
    op.drop_table('polls')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('polls',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('polls_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='polls_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='polls_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('options',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('options_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('poll_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['poll_id'], ['polls.id'], name='options_poll_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='options_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('votes',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('poll_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('option_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['option_id'], ['options.id'], name='votes_option_id_fkey'),
    sa.ForeignKeyConstraint(['poll_id'], ['polls.id'], name='votes_poll_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='votes_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='votes_pkey')
    )
    # ### end Alembic commands ###
